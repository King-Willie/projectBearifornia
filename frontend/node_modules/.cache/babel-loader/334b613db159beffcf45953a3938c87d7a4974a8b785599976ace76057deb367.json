{"ast":null,"code":"var _jsxFileName = \"/Users/markjosephs/IdeaProjects/projectBearifornia/frontend/src/Components/Home/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Home.css';\nimport slider1 from '../../assets/slider-2.jpg';\nimport axios from 'axios';\nimport Layout from \"../Layout/Layout\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [imageUrl, setImageUrl] = useState('');\n  useEffect(() => {\n    // Make a GET request to your Spring Boot REST API to fetch the image URL\n    axios.get('http://localhost:8080/api/img').then(response => {\n      console.log(response.data);\n      setImageUrl(response.data); // Assuming the API returns the image URL as plain text\n    }).catch(error => {\n      console.error('Error fetching image:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"home-banner\",\n        src: imageUrl,\n        alt: \"Reserve Now!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-overlay\",\n        children: \"Reserve Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/reserve\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"KjMZRZCO4mLZUizaO9kQ3A3TUQU=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","slider1","axios","Layout","Link","jsxDEV","_jsxDEV","Home","_s","imageUrl","setImageUrl","get","then","response","console","log","data","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","to","_c","$RefreshReg$"],"sources":["/Users/markjosephs/IdeaProjects/projectBearifornia/frontend/src/Components/Home/Home.js"],"sourcesContent":["\nimport React, {useEffect, useState} from 'react';\nimport './Home.css'\nimport slider1 from '../../assets/slider-2.jpg'\nimport axios from 'axios';\nimport Layout from \"../Layout/Layout\";\nimport { Link } from 'react-router-dom';\n\n\nconst Home = () => {\n\n    const [imageUrl, setImageUrl] = useState('');\n\n    useEffect(() => {\n        // Make a GET request to your Spring Boot REST API to fetch the image URL\n        axios.get('http://localhost:8080/api/img')\n            .then(response => {\n                console.log(response.data);\n                setImageUrl(response.data); // Assuming the API returns the image URL as plain text\n            })\n            .catch(error => {\n                console.error('Error fetching image:', error);\n            });\n    }, []);\n\n    return (\n        <div>\n            <div>\n                <Layout />\n                <img className='home-banner' src={imageUrl} alt=\"Reserve Now!\"/>\n                <h1 className='text-overlay'>Reserve Now</h1>\n                <Link to='/reserve'>\n                    {/*<button className='reserve-button' onClick={Clicked}>Reserve</button>*/}\n                </Link>\n                {/*<button className='reserve-button' onClick={Clicked}>Reserve</button>*/}\n            </div>\n        </div>\n    );\n};\n\nexport default Home"],"mappings":";;AACA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAO,YAAY;AACnB,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,kBAAkB;AACrC,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEf,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACZ;IACAG,KAAK,CAACS,GAAG,CAAC,+BAA+B,CAAC,CACrCC,IAAI,CAACC,QAAQ,IAAI;MACdC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC;MAC1BN,WAAW,CAACG,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACZJ,OAAO,CAACI,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIZ,OAAA;IAAAa,QAAA,eACIb,OAAA;MAAAa,QAAA,gBACIb,OAAA,CAACH,MAAM;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVjB,OAAA;QAAKkB,SAAS,EAAC,aAAa;QAACC,GAAG,EAAEhB,QAAS;QAACiB,GAAG,EAAC;MAAc;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAChEjB,OAAA;QAAIkB,SAAS,EAAC,cAAc;QAAAL,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7CjB,OAAA,CAACF,IAAI;QAACuB,EAAE,EAAC;MAAU;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACf,EAAA,CA7BID,IAAI;AAAAqB,EAAA,GAAJrB,IAAI;AA+BV,eAAeA,IAAI;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}